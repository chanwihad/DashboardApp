@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@using Newtonsoft.Json

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - DashboardApp</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/style.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div id="sidebar" class="sidebar">
                <div class="sidebar-header d-flex align-items-center justify-content-start p-3">
                    <img src="~/images/logo.png" alt="Logo" class="img-fluid rounded-circle me-3" width="50">
                    
                    <p class="text-white mb-0">
                        @if (HttpContextAccessor.HttpContext.Session.GetString("Token") != null)
                        {
                            @HttpContextAccessor.HttpContext.Session.GetString("Username");
                        }
                        else
                        {
                            @:Welcome
                        }
                    </p>
                </div>
                <hr class="text-white">

                    @{
                        var userMenus = new List<MenuSessionDto>();
                        if (HttpContextAccessor.HttpContext.Session.GetString("Token") != null)
                        {
                            var userMenusJson = HttpContextAccessor?.HttpContext?.Session.GetString("UserMenus");
                            userMenus = !string.IsNullOrEmpty(userMenusJson) 
                                            ? JsonConvert.DeserializeObject<List<MenuSessionDto>>(userMenusJson)
                                            : new List<MenuSessionDto>();
                        }
                    }
                
                    @if (HttpContextAccessor.HttpContext.Session.GetString("Token") != null && HttpContextAccessor.HttpContext.Session.GetString("CanView") == "true")
                    {
                        <ul class="nav flex-column">
                            @if (userMenus.Any(m => m.Url.Equals("api/product", StringComparison.OrdinalIgnoreCase)))
                            {
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle" href="#" id="dashboardDropdown" role="button" data-bs-toggle="collapse" data-bs-target="#dashboardCollapse" aria-expanded="false">
                                        Products
                                    </a>
                                    <div id="dashboardCollapse" class="collapse">
                                        <ul class="nav flex-column">
                                            <li><a class="dropdown-item" href="/Products">List Product</a></li>
                                        </ul>
                                    </div>
                                </li>
                            }
                            @if (userMenus.Any(m => m.Url.Equals("api/user", StringComparison.OrdinalIgnoreCase)) || userMenus.Any(m => m.Url.Equals("api/role", StringComparison.OrdinalIgnoreCase)) || userMenus.Any(m => m.Url.Equals("api/role", StringComparison.OrdinalIgnoreCase)))
                            {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="settingsDropdown" role="button" data-bs-toggle="collapse" data-bs-target="#settingsCollapse" aria-expanded="false">
                                    User Management
                                </a>
                                <div id="settingsCollapse" class="collapse">
                                    <ul class="nav flex-column">
                                    @if (userMenus.Any(m => m.Url.Equals("api/user", StringComparison.OrdinalIgnoreCase)))
                                    {
                                        <li><a class="dropdown-item" href="/User">User</a></li>
                                    }
                                    @if (userMenus.Any(m => m.Url.Equals("api/role", StringComparison.OrdinalIgnoreCase)))
                                    {
                                        <li><a class="dropdown-item" href="/Role">Role</a></li>
                                    }
                                    @if (userMenus.Any(m => m.Url.Equals("api/role", StringComparison.OrdinalIgnoreCase)))
                                    {
                                        <li><a class="dropdown-item" href="/Menu">Menu</a></li>
                                    }
                                    </ul>
                                </div>
                            </li>
                            }
                        </ul>
                    }
            </div>

            <div id="content-wrapper" class="content-wrapper col">
                <nav class="navbar navbar-expand-lg navbar-dark navbar-custom">
                    <button class="toggle-btn" onclick="toggleSidebar()">&#9776;</button>
                    <a class="navbar-brand mx-auto"></a>
                    <div class="ms-auto">
                        
                             @if (HttpContextAccessor.HttpContext.Session.GetString("Token") != null)
                            {
                                <div class="dropdown d-inline">
                                    <button class="btn dropdown-toggle text-white-dropdown" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                        @HttpContextAccessor.HttpContext.Session.GetString("Username")
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton">
                                        <li><a class="dropdown-item" href="/Auth/ChangePassword">Change Password</a></li>
                                        <li>
                                            <form asp-controller="Auth" asp-action="Logout" method="post" style="display: inline;">
                                                <button type="submit" class="dropdown-item">Logout</button>
                                            </form>
                                        </li>
                                    </ul>
                                </div>
                            }
                    </div>
                </nav>

                <div class="container mt-4">
                    @RenderBody()
                </div>
            </div>
        </div>
    </div>

    <script>
        function toggleSidebar() {
            document.getElementById('sidebar').classList.toggle('active');
            document.getElementById('content-wrapper').classList.toggle('active');
        }
    </script>
</body>
</html>
